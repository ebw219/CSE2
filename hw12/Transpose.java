/*
Emily Weston
Lab 12
Matrix Transposition
The purpose of this program is to practice manipulating multidimensional arrays and writing methods that have array parameters.
*/

import java.util.Scanner; //imports Scanner class

public class Transpose { //opens class
    
    public static int [][] randomMatrix(int width, int height) { //opens method randomMatrix
        
        int [][] array = new int [height][width]; //declares a new array with the size of the input
        for (int q=0; q<array.length; q++) { //for loop to create the width of the array
            for (int p=0; p<array[q].length; p++) { //for loop to create the height of the array
                array[q][p]=(int)((Math.random()*20)-10); //assigns a random number to each location in the array
            } //ends inner for loop
        } //ends outer for loop
        
        return array; //returns the array generated by the method randomMatrix
        
    } //ends method randomMatrix
    
    
    public static void printMatrix(int [][] array) { //opens method printMatrix
        for(int w=0; w<array.length; w++) { //for loop to see if array is rectangular
            if (array.length==array[0].length) { //enters if statement if array is not rectangular
                System.out.println("WARNING your array is not rectangular"); //tells user their array is not rectangular
                break; //breaks if statment and for loop
            } //ends if statement
        } //ends for loop
        for (int q=0; q<array.length; q++) { //for loop to print array
            for (int p=0; p<array[q].length; p++) { //for loop to print array
                if (array[q][p]>=0) { //enters if statement if integer is positive
                    System.out.print(" " + array[q][p] + " "); //prints positive numbers with spaces
                } //ends if statement
                else { //enters else statement if integer is negative
                    System.out.print(array[q][p] + " "); //prints negative numbers with fewer spaces
                } //ends else statement
            } //ends inner for loop
            System.out.println(" "); //prints next row on the next line
        } //ends outer for loop
        
    } //ends method printMatrix
    
    
    public static int [][] transposeMatrix(int [][] array) { //opens method transposeMatrix
        int row=array.length; //creates variable of the value of the number of current columns in the array
        int column=array[0].length; //creates variable of the value of the number of current rows in the array
        int [][] helper = new int[column][row]; //creates a new array with the sizes of the columns and the rows switched
        
        for (int q=0; q<column; q++) { //for loop to transpose array
            for (int p=0; p<row; p++) { //for loop to transpose array
                helper[q][p]=array[p][q]; //reassigns each value in the array to its new corresponding place in the transposed array
            } //ends inner for loop
        } //ends outer for loop

    return helper; //returns array generated by method transposeMatrix
    
    } //ends method transposeMatrix
    
    
    public static void main(String[] args) { //opens main method
        
        Scanner myScanner=new Scanner (System.in); //declare an instance of Scanner
        
        System.out.println("Please enter a positive integer for the width of the matrix: "); //prompts uer for width
        int width=0; //declares variable for width of the matrix
        boolean acceptable=true; //declares variable to control the loop
        while (acceptable) { //for loop condition to control input of ints
            if (!myScanner.hasNextInt()) { //enter if statement if user input is not an integer
                System.out.println("ERROR please enter an integer: "); //prompts user to input a new integer
                width=myScanner.nextInt(); //stores new user input in width variable
            } //ends if statement
            else { //enter else statement if user input is an integer
                width=myScanner.nextInt(); //stores new user input in width variable
                if (width<0) { //enters inner if statement if input is less than 0
                    System.out.println("ERROR please enter an integer greater than 0: "); //prompts user to enter a new integer
                    width=myScanner.nextInt(); //stores new user input in width variable
                } //ends inner if statement statement
                acceptable=false; //ends loop
            } //ends else statment
        } //ends while loop
        
        System.out.println("Please enter a positive integer for the height of the matrix: "); //prompts uer for height
        
        int height=0; //declares variable for height of the matrix
        acceptable=true; //declares variable to control the loop
        while (acceptable) { //for loop condition to control input of ints
            if (!myScanner.hasNextInt()) { //enter if statement if user input is not an integer
                System.out.println("ERROR please enter an integer: "); //prompts user to input a new integer
                height=myScanner.nextInt(); //stores new user input in height variable
            } //ends if statement
            else { //enter else statement if user input is an integer
                height=myScanner.nextInt(); //stores new user input in width variable
                if (height<0) { //enters inner if statement if input is less than 0
                    System.out.println("ERROR please enter an integer greater than 0: "); //prompts user to enter a new integer
                    height=myScanner.nextInt(); //stores new user input in height variable
                } //ends inner if statement statement
                acceptable=false; //ends loop
            } //ends else statment
        } //ends while loop
        
        int [][] array=randomMatrix(width, height); //creates an array using method randomMatrix and user's input
        printMatrix(array); //prints array using method printMatrix
        int [][] array2=transposeMatrix(array); //creates array using the old array and method transposeMatrix
        System.out.println("Transposed: "); //tells user their array has been transposed
        printMatrix(array2); //prints array using method printMatrix
        
        
    } //ends main method
    
    
    
} //ends class Transpose